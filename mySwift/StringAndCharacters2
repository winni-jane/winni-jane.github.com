let greeting21 = "Hello, world!"
        let index21 = greeting21.index(of: ",") ?? greeting21.endIndex
        let beginning21 = greeting21[..<index21]
        // beginning21 的值为 "Hello"
        
        // 把结果转化为 String 以便长期存储。
        let newString = String(beginning21)
        
        //greeting21 是一个 String，意味着它在内存里有一片空间保存字符集。而由于 beginning21 是 greeting21 的 SubString，它重用了 greeting21 的内存空间。相反，newString 是一个 String —— 它是使用 SubString 创建的，拥有一片自己的内存空间。
        var str = "Hello, playground"
        // Swift3.0
        var index0 = str.index(of: " ")!
        let greeting0 = str[str.startIndex ..< index0]
        index = str.index(index0, offsetBy: 1) // index0 下标 +1
        let name = str[index ..< str.endIndex]
        
        // Swift4.0
        var index11 = str.index(of: " ")!
        let greeting11 = str.prefix(upTo: index11)
        index11 = str.index(index11, offsetBy: 1)
        let name1 = str.suffix(from: index11)
        //        print(Array(str.enumerated()))
        //        print(Array(zip(1..., str)))
        
